plugins {
  id "org.sonarqube" version "2.8"
}
apply plugin: 'java'
apply plugin: "jacoco"

tasks.withType(JavaCompile){ //中文碼問題
    options.encoding = 'UTF-8'
}

javadoc.options.encoding = 'UTF-8'
compileJava.options.encoding = 'UTF-8'

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled true
         xml.destination file("${buildDir}/reports/jacoco.xml")
    }
executionData.from = files('build/jacoco/test.exec')   
}

def allTestCoverageFile = "$buildDir/jacoco/test.exec"

sonarqube {
  properties {
    property "sonar.projectKey", "wins0117_Vendingmachine"
    property "sonar.organization", "wins0117"
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", "44bcc74ce1752129114aa00374fbeb13789ef325"


  property "sonar.junit.reportsPath","build/test-results/test"
     property "sonar.sources","src/main/java/ven"
     property "sonar.tests","src/test/java/ven"
     property "sonar.test.binaries","build/classes/java/test/test/java/ven"
 property "sonar.jacoco.reportPath", "${rootProject.buildDir}/jacoco/test.exec"
}
}

repositories {
    mavenCentral()
jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompileOnly 'junit:junit:4.12' 
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1' 
}

test {


 useJUnitPlatform()


}
